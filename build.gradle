/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // https://search.maven.org/artifact/commons-io/commons-io/1.3.2/jar
    implementation 'commons-io:commons-io:1.3.2'

    // https://search.maven.org/artifact/com.fasterxml.jackson.core/jackson-core/2.10.0.pr2/bundle
    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.0.pr2'

    // https://search.maven.org/artifact/com.fasterxml.jackson.core/jackson-annotations/2.10.0.pr2/bundle
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.0.pr2'

    // https://search.maven.org/artifact/com.fasterxml.jackson.core/jackson-databind/2.10.0.pr2/bundle
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.0.pr2'

    // https://search.maven.org/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml/2.10.0.pr2/bundle
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.0.pr2'

    // https://search.maven.org/artifact/org.mybatis/mybatis/3.5.2/jar
    implementation 'org.mybatis:mybatis:3.5.2'

    // https://search.maven.org/artifact/mysql/mysql-connector-java/8.0.17/jar
    implementation 'mysql:mysql-connector-java:8.0.17'

    // https://search.maven.org/artifact/org.yaml/snakeyaml/1.25/bundle
    implementation 'org.yaml:snakeyaml:1.25'
}

application {
    mainClassName = 'cloneid.Manager'
}

jar {
    manifest {
        attributes 'Main-Class': 'cloneid.Manager'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    baseName 'cloneid'
}

task uberJar(type: Jar) {

    archiveClassifier = ''
    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath

    manifest {
        attributes 'Main-Class': 'cloneid.Manager'
    }

    from{
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

